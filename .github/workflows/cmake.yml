name: CMake

on: [push]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2

    - if: matrix.os == 'ubuntu-latest'
      run: sudo apt install clang-tidy clang-format

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Install conan
      run: pip install conan pre-commit

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ${{ github.workspace }}

    - name: Clang-tidy & clang-format
      working-directory: ${{runner.workspace}}
      if: matrix.os == 'ubuntu-latest'
      run: find . -name compile_commands.json; pre-commit run --all-files

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .

    - name: Exec
      working-directory: ${{runner.workspace}}/build
      run: bin/demo

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest .
